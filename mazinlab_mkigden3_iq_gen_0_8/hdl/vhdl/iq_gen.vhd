-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity iq_gen is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    i_out_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    i_out_TVALID : OUT STD_LOGIC;
    i_out_TREADY : IN STD_LOGIC;
    i_out_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    i_out_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    i_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    q_out_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    q_out_TVALID : OUT STD_LOGIC;
    q_out_TREADY : IN STD_LOGIC;
    q_out_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    q_out_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    q_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    phase_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    phase_TVALID : OUT STD_LOGIC;
    phase_TREADY : IN STD_LOGIC;
    phase_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    phase_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    phase_TUSER : OUT STD_LOGIC_VECTOR (15 downto 0);
    phase_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of iq_gen is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "iq_gen_iq_gen,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.367812,HLS_SYN_LAT=134217859,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=139,HLS_SYN_LUT=539,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv29_1FFFFFFF : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal max : STD_LOGIC_VECTOR (19 downto 0);
    signal run : STD_LOGIC;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal i_out_TDATA_blk_n : STD_LOGIC;
    signal q_out_TDATA_blk_n : STD_LOGIC;
    signal phase_TDATA_blk_n : STD_LOGIC;
    signal i_V_41_reg_232 : STD_LOGIC_VECTOR (28 downto 0);
    signal max_read_reg_459 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_load_fu_243_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_max_fu_258_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_max_reg_474 : STD_LOGIC_VECTOR (28 downto 0);
    signal iq_user_fu_268_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_3_7_fu_395_p10 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ptmp_last_V_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_2_fu_451_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran4to5_state3 : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal run_assign_fu_138 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln_fu_251_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_fu_273_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_6_fu_317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_5_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_4_fu_305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_3_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_2_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_1_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_346_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_7_fu_391_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_6_fu_387_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_5_fu_383_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_4_fu_379_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_3_fu_375_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_fu_371_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_1_fu_367_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_fu_363_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal phase_user_fu_264_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1049_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_fu_445_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal regslice_both_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_i_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_q_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_phase_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state5 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (255 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_vld_out : STD_LOGIC;
    signal i_out_TVALID_int_regslice : STD_LOGIC;
    signal i_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_i_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_i_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_i_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_i_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_i_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_i_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_i_out_V_last_V_U_vld_out : STD_LOGIC;
    signal q_out_TVALID_int_regslice : STD_LOGIC;
    signal q_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_q_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_q_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_q_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_q_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_q_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_q_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_q_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_q_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_q_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_q_out_V_last_V_U_vld_out : STD_LOGIC;
    signal phase_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal phase_TVALID_int_regslice : STD_LOGIC;
    signal phase_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_phase_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_phase_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_phase_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_phase_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_phase_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_phase_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_phase_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_phase_V_user_V_U_apdone_blk : STD_LOGIC;
    signal phase_TUSER_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_phase_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_phase_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_phase_V_last_V_U_apdone_blk : STD_LOGIC;
    signal phase_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_phase_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_phase_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component iq_gen_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        max : OUT STD_LOGIC_VECTOR (19 downto 0);
        run : OUT STD_LOGIC );
    end component;


    component iq_gen_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component iq_gen_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        max => max,
        run => run);

    regslice_both_out_V_data_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_V_data_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_data_V_U_apdone_blk);

    regslice_both_out_V_keep_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv32_0,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_keep_V_U_ack_in_dummy,
        data_out => out_r_TKEEP,
        vld_out => regslice_both_out_V_keep_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_keep_V_U_apdone_blk);

    regslice_both_out_V_strb_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv32_0,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_strb_V_U_ack_in_dummy,
        data_out => out_r_TSTRB,
        vld_out => regslice_both_out_V_strb_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_strb_V_U_apdone_blk);

    regslice_both_out_V_user_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iq_user_fu_268_p1,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_user_V_U_ack_in_dummy,
        data_out => out_r_TUSER,
        vld_out => regslice_both_out_V_user_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_user_V_U_apdone_blk);

    regslice_both_out_V_last_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_fu_424_p2,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_last_V_U_ack_in_dummy,
        data_out => out_r_TLAST,
        vld_out => regslice_both_out_V_last_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_last_V_U_apdone_blk);

    regslice_both_i_out_V_data_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_Result_3_7_fu_395_p10,
        vld_in => i_out_TVALID_int_regslice,
        ack_in => i_out_TREADY_int_regslice,
        data_out => i_out_TDATA,
        vld_out => regslice_both_i_out_V_data_V_U_vld_out,
        ack_out => i_out_TREADY,
        apdone_blk => regslice_both_i_out_V_data_V_U_apdone_blk);

    regslice_both_i_out_V_keep_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => i_out_TVALID_int_regslice,
        ack_in => regslice_both_i_out_V_keep_V_U_ack_in_dummy,
        data_out => i_out_TKEEP,
        vld_out => regslice_both_i_out_V_keep_V_U_vld_out,
        ack_out => i_out_TREADY,
        apdone_blk => regslice_both_i_out_V_keep_V_U_apdone_blk);

    regslice_both_i_out_V_strb_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => i_out_TVALID_int_regslice,
        ack_in => regslice_both_i_out_V_strb_V_U_ack_in_dummy,
        data_out => i_out_TSTRB,
        vld_out => regslice_both_i_out_V_strb_V_U_vld_out,
        ack_out => i_out_TREADY,
        apdone_blk => regslice_both_i_out_V_strb_V_U_apdone_blk);

    regslice_both_i_out_V_last_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_fu_424_p2,
        vld_in => i_out_TVALID_int_regslice,
        ack_in => regslice_both_i_out_V_last_V_U_ack_in_dummy,
        data_out => i_out_TLAST,
        vld_out => regslice_both_i_out_V_last_V_U_vld_out,
        ack_out => i_out_TREADY,
        apdone_blk => regslice_both_i_out_V_last_V_U_apdone_blk);

    regslice_both_q_out_V_data_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_Result_3_7_fu_395_p10,
        vld_in => q_out_TVALID_int_regslice,
        ack_in => q_out_TREADY_int_regslice,
        data_out => q_out_TDATA,
        vld_out => regslice_both_q_out_V_data_V_U_vld_out,
        ack_out => q_out_TREADY,
        apdone_blk => regslice_both_q_out_V_data_V_U_apdone_blk);

    regslice_both_q_out_V_keep_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => q_out_TVALID_int_regslice,
        ack_in => regslice_both_q_out_V_keep_V_U_ack_in_dummy,
        data_out => q_out_TKEEP,
        vld_out => regslice_both_q_out_V_keep_V_U_vld_out,
        ack_out => q_out_TREADY,
        apdone_blk => regslice_both_q_out_V_keep_V_U_apdone_blk);

    regslice_both_q_out_V_strb_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => q_out_TVALID_int_regslice,
        ack_in => regslice_both_q_out_V_strb_V_U_ack_in_dummy,
        data_out => q_out_TSTRB,
        vld_out => regslice_both_q_out_V_strb_V_U_vld_out,
        ack_out => q_out_TREADY,
        apdone_blk => regslice_both_q_out_V_strb_V_U_apdone_blk);

    regslice_both_q_out_V_last_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_fu_424_p2,
        vld_in => q_out_TVALID_int_regslice,
        ack_in => regslice_both_q_out_V_last_V_U_ack_in_dummy,
        data_out => q_out_TLAST,
        vld_out => regslice_both_q_out_V_last_V_U_vld_out,
        ack_out => q_out_TREADY,
        apdone_blk => regslice_both_q_out_V_last_V_U_apdone_blk);

    regslice_both_phase_V_data_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => phase_TDATA_int_regslice,
        vld_in => phase_TVALID_int_regslice,
        ack_in => phase_TREADY_int_regslice,
        data_out => phase_TDATA,
        vld_out => regslice_both_phase_V_data_V_U_vld_out,
        ack_out => phase_TREADY,
        apdone_blk => regslice_both_phase_V_data_V_U_apdone_blk);

    regslice_both_phase_V_keep_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => phase_TVALID_int_regslice,
        ack_in => regslice_both_phase_V_keep_V_U_ack_in_dummy,
        data_out => phase_TKEEP,
        vld_out => regslice_both_phase_V_keep_V_U_vld_out,
        ack_out => phase_TREADY,
        apdone_blk => regslice_both_phase_V_keep_V_U_apdone_blk);

    regslice_both_phase_V_strb_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => phase_TVALID_int_regslice,
        ack_in => regslice_both_phase_V_strb_V_U_ack_in_dummy,
        data_out => phase_TSTRB,
        vld_out => regslice_both_phase_V_strb_V_U_vld_out,
        ack_out => phase_TREADY,
        apdone_blk => regslice_both_phase_V_strb_V_U_apdone_blk);

    regslice_both_phase_V_user_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => phase_TUSER_int_regslice,
        vld_in => phase_TVALID_int_regslice,
        ack_in => regslice_both_phase_V_user_V_U_ack_in_dummy,
        data_out => phase_TUSER,
        vld_out => regslice_both_phase_V_user_V_U_vld_out,
        ack_out => phase_TREADY,
        apdone_blk => regslice_both_phase_V_user_V_U_apdone_blk);

    regslice_both_phase_V_last_V_U : component iq_gen_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => phase_TLAST_int_regslice,
        vld_in => phase_TVALID_int_regslice,
        ack_in => regslice_both_phase_V_last_V_U_ack_in_dummy,
        data_out => phase_TLAST,
        vld_out => regslice_both_phase_V_last_V_U_vld_out,
        ack_out => phase_TREADY,
        apdone_blk => regslice_both_phase_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_load_fu_243_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((grp_load_fu_243_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_V_41_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_fu_243_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_V_41_reg_232 <= ap_const_lv29_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((grp_load_fu_243_p1 = ap_const_lv1_1) or (ptmp_last_V_fu_433_p2 = ap_const_lv1_0)))) then 
                i_V_41_reg_232 <= i_V_2_fu_451_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                max_read_reg_459 <= max;
                run_assign_fu_138 <= (0=>run, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    p_max_reg_474(28 downto 9) <= p_max_fu_258_p2(28 downto 9);
            end if;
        end if;
    end process;
    p_max_reg_474(8 downto 0) <= "111111111";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, grp_load_fu_243_p1, ap_CS_fsm_state2, ap_block_pp0_stage0_subdone, regslice_both_out_V_data_V_U_apdone_blk, regslice_both_i_out_V_data_V_U_apdone_blk, regslice_both_q_out_V_data_V_U_apdone_blk, regslice_both_phase_V_data_V_U_apdone_blk, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (((grp_load_fu_243_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((regslice_both_phase_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_q_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_i_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(regslice_both_out_V_data_V_U_apdone_blk, regslice_both_i_out_V_data_V_U_apdone_blk, regslice_both_q_out_V_data_V_U_apdone_blk, regslice_both_phase_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_phase_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_q_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_i_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (out_r_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (out_r_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state4_io, out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io) or (out_r_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io) or (out_r_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state4_io, out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io) or (out_r_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io) or (out_r_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_state3_io_assign_proc : process(out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_state3_io <= ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter0_assign_proc : process(out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter0 <= ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state4_io_assign_proc : process(out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_state4_io <= ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(out_r_TREADY_int_regslice, i_out_TREADY_int_regslice, q_out_TREADY_int_regslice, phase_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((phase_TREADY_int_regslice = ap_const_logic_0) or (q_out_TREADY_int_regslice = ap_const_logic_0) or (i_out_TREADY_int_regslice = ap_const_logic_0) or (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(regslice_both_out_V_data_V_U_apdone_blk, regslice_both_i_out_V_data_V_U_apdone_blk, regslice_both_q_out_V_data_V_U_apdone_blk, regslice_both_phase_V_data_V_U_apdone_blk)
    begin
                ap_block_state5 <= ((regslice_both_phase_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_q_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_i_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_predicate_tran4to5_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_tran4to5_state3 = ap_const_boolean_1))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_tran4to5_state3_assign_proc : process(ptmp_last_V_fu_433_p2, run_assign_fu_138)
    begin
                ap_predicate_tran4to5_state3 <= ((run_assign_fu_138 = ap_const_lv1_0) and (ptmp_last_V_fu_433_p2 = ap_const_lv1_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    empty_fu_346_p1 <= i_V_41_reg_232(16 - 1 downto 0);
    grp_load_fu_243_p1 <= run_assign_fu_138;
    i_V_2_fu_451_p3 <= 
        ap_const_lv29_0 when (icmp_ln1049_fu_440_p2(0) = '1') else 
        i_V_fu_445_p2;
    i_V_fu_445_p2 <= std_logic_vector(unsigned(i_V_41_reg_232) + unsigned(ap_const_lv29_1));

    i_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, i_out_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            i_out_TDATA_blk_n <= i_out_TREADY_int_regslice;
        else 
            i_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    i_out_TVALID <= regslice_both_i_out_V_data_V_U_vld_out;

    i_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            i_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1049_fu_440_p2 <= "1" when (i_V_41_reg_232 = p_max_reg_474) else "0";
    iq_user_fu_268_p1 <= i_V_41_reg_232(8 - 1 downto 0);
    mul_fu_273_p3 <= (i_V_41_reg_232 & ap_const_lv3_0);
    or_ln50_1_fu_287_p2 <= (mul_fu_273_p3 or ap_const_lv32_2);
    or_ln50_2_fu_293_p2 <= (mul_fu_273_p3 or ap_const_lv32_3);
    or_ln50_3_fu_299_p2 <= (mul_fu_273_p3 or ap_const_lv32_4);
    or_ln50_4_fu_305_p2 <= (mul_fu_273_p3 or ap_const_lv32_5);
    or_ln50_5_fu_311_p2 <= (mul_fu_273_p3 or ap_const_lv32_6);
    or_ln50_6_fu_317_p2 <= (mul_fu_273_p3 or ap_const_lv32_7);
    or_ln50_fu_281_p2 <= (mul_fu_273_p3 or ap_const_lv32_1);

    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, out_r_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TDATA_int_regslice <= ((((((((or_ln50_6_fu_317_p2 & or_ln50_5_fu_311_p2) & or_ln50_4_fu_305_p2) & or_ln50_3_fu_299_p2) & or_ln50_2_fu_293_p2) & or_ln50_1_fu_287_p2) & or_ln50_fu_281_p2) & i_V_41_reg_232) & ap_const_lv3_0);
    out_r_TVALID <= regslice_both_out_V_data_V_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_3_7_fu_395_p10 <= ((((((((trunc_ln674_7_fu_391_p1 & trunc_ln674_6_fu_387_p1) & trunc_ln674_5_fu_383_p1) & trunc_ln674_4_fu_379_p1) & trunc_ln674_3_fu_375_p1) & trunc_ln674_2_fu_371_p1) & trunc_ln674_1_fu_367_p1) & trunc_ln674_fu_363_p1) & ap_const_lv3_0);
    p_max_fu_258_p2 <= std_logic_vector(unsigned(shl_ln_fu_251_p3) + unsigned(ap_const_lv29_1FFFFFFF));

    phase_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, phase_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            phase_TDATA_blk_n <= phase_TREADY_int_regslice;
        else 
            phase_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    phase_TDATA_int_regslice <= (((empty_fu_346_p1 & empty_fu_346_p1) & empty_fu_346_p1) & empty_fu_346_p1);
    phase_TLAST_int_regslice <= "1" when (phase_user_fu_264_p1 = ap_const_lv9_1FF) else "0";
    phase_TUSER_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phase_user_fu_264_p1),16));
    phase_TVALID <= regslice_both_phase_V_data_V_U_vld_out;

    phase_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            phase_TVALID_int_regslice <= ap_const_logic_1;
        else 
            phase_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    phase_user_fu_264_p1 <= i_V_41_reg_232(9 - 1 downto 0);
    ptmp_last_V_fu_433_p2 <= "1" when (phase_user_fu_264_p1 = ap_const_lv9_1FF) else "0";

    q_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, q_out_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            q_out_TDATA_blk_n <= q_out_TREADY_int_regslice;
        else 
            q_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    q_out_TVALID <= regslice_both_q_out_V_data_V_U_vld_out;

    q_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            q_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln_fu_251_p3 <= (max_read_reg_459 & ap_const_lv9_0);
    tmp_last_V_fu_424_p2 <= "1" when (iq_user_fu_268_p1 = ap_const_lv8_FF) else "0";
    trunc_ln674_1_fu_367_p1 <= or_ln50_fu_281_p2(16 - 1 downto 0);
    trunc_ln674_2_fu_371_p1 <= or_ln50_1_fu_287_p2(16 - 1 downto 0);
    trunc_ln674_3_fu_375_p1 <= or_ln50_2_fu_293_p2(16 - 1 downto 0);
    trunc_ln674_4_fu_379_p1 <= or_ln50_3_fu_299_p2(16 - 1 downto 0);
    trunc_ln674_5_fu_383_p1 <= or_ln50_4_fu_305_p2(16 - 1 downto 0);
    trunc_ln674_6_fu_387_p1 <= or_ln50_5_fu_311_p2(16 - 1 downto 0);
    trunc_ln674_7_fu_391_p1 <= or_ln50_6_fu_317_p2(16 - 1 downto 0);
    trunc_ln674_fu_363_p1 <= i_V_41_reg_232(13 - 1 downto 0);
end behav;
